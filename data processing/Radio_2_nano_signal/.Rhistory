knitr::opts_chunk$set(echo = TRUE)
require(ggformula)
library(mosaic)
delays = read.csv("UT2Nano.csv",header = TRUE)
gf_histogram(~Time, data=delays, bins=10, xlab="Obseved delays [us]")
fav_stats(delays$Time)
gf_boxplot(~Time, data=delays)
result <- t.test(delays$Time)
print(result$conf.int)
S_1 = 30.63973
S_2 = 51.14
f_obs = (S_1^2)/(S_2^2)
pdist("f", f_obs, df1=99, df2=776)
min(Time)
min(delays[0])
min(delays(0))
View(delays)
require(ggformula)
library(mosaic)
distancetest = read.csv("distance_data.csv",header = TRUE)
distancetest = read.csv("distance_data.csv",header = TRUE)
Alle målingerne med de dårlige og det hele er blevet loadet som 2 kolonner i en csv fil som ser sådan her ud.
```{r, echo=FALSE}
gf_point(TOF ~ Distance, data=distancetest)
gf_point(TOF ~ Distance, data=distancetest)
Det ligner bare lidt lort tho :((.
Men ved at lave et boksplot over fordelingen ved en given afstand:
Her kan det lige ses at det meste af boksplottet ligger ok, men bare lige de hårde outliers der. Så vi smider et filter på som tager et boksplottet og sorterer alt fra, fra de øvre der fandt jeg nogen der brugte IQR. vi tager alt der ligger 30 gange det og fjerner dem, Man siger 1.5 IQR svarer til 95% af sættet.
filter_outliers <- function(data){
qnt <- quantile(data, probs=c(.25, .75), na.rm = T)
iqr <- IQR(data)
lower <- qnt[1] - 15*iqr
upper <- qnt[2] + 15*iqr
data <- data[data > lower & data < upper]
return(data)
}
}
Så kan alle målte længder fås ved at køre den her
Det giver os det her :)))
